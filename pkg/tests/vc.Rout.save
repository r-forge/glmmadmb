
R Under development (unstable) (2013-04-25 r62670) -- "Unsuffered Consequences"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## tests of nesting as well 
> library(glmmADMB)
Loading required package: MASS
Loading required package: R2admb

Attaching package: ‘glmmADMB’

The following object is masked from ‘package:MASS’:

    stepAIC

The following object is masked from ‘package:stats’:

    step

> 
> ## try to make reporting work for (mistakenly) nested variables, without breaking anything:
> 
> ##
> set.seed(10)
> d <- expand.grid(f1=LETTERS[1:5],f2=letters[1:3],rep=1:5)
> d <- transform(d,f12=interaction(f1,f2),y=rnorm(nrow(d)),x=rnorm(nrow(d)),x2=rnorm(nrow(d)))
> ## library(nlme)
> ## lme(y~1, random=~1|f1/f2,data=d))
> ## lme(y~1, random=~1|f1/f12,data=d))
> 
> t1 <- system.time(g1 <- glmmadmb(y~1+(1|f1/f2),family="gaussian",data=d))
> t2 <- system.time(g2 <- glmmadmb(y~1+(1|f1/f12),family="gaussian",data=d))
> VarCorr(g1)
Group=f1
             Variance    StdDev
(Intercept) 7.642e-09 8.742e-05
Group=f1:f2
             Variance    StdDev
(Intercept) 3.021e-09 5.496e-05
> ## except for reporting, we get the same answers
> summary(g1)

Call:
glmmadmb(formula = y ~ 1 + (1 | f1/f2), data = d, family = "gaussian")

AIC: 205.2 

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)   -0.238      0.104   -2.29    0.022 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Number of observations: total=75, f1=5, f1:f2=15 
Random effect variance(s):
Group=f1
             Variance    StdDev
(Intercept) 7.642e-09 8.742e-05
Group=f1:f2
             Variance    StdDev
(Intercept) 3.021e-09 5.496e-05

Residual variance: 0.90267 (std. err.: 0.073705)

Log-likelihood: -98.6118 
> summary(g2)

Call:
glmmadmb(formula = y ~ 1 + (1 | f1/f12), data = d, family = "gaussian")

AIC: 205.2 

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)   -0.238      0.104   -2.29    0.022 *
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Number of observations: total=75, f1=5, f1:f12=15 
Random effect variance(s):
Group=f1
             Variance    StdDev
(Intercept) 7.642e-09 8.742e-05
Group=f1:f12
             Variance    StdDev
(Intercept) 3.021e-09 5.496e-05

Residual variance: 0.90267 (std. err.: 0.073705)

Log-likelihood: -98.6118 
> 
> 
> ## need another test with another component:
> 
> ## FIXME: does this model make sense?  feels like we have a (1|f1) term repeated ...
> g3 <- glmmadmb(y~1+(1|f1/f2)+(x|f1),family="gaussian",data=d)
> VarCorr(g3)
Group=f1
             Variance    StdDev
(Intercept) 4.909e-09 7.006e-05
Group=f1:f2
             Variance    StdDev
(Intercept) 1.432e-08 0.0001197
Group=f1
             Variance    StdDev
(Intercept) 4.891e-09 6.994e-05
x           3.625e-09 6.021e-05
> 
> if (FALSE) {
+     ## FIXME: these don't work, but because of non-pos-def errors rather
+     ##  than anything essentially wrong?
+     g4 <- glmmadmb(y~1+(x|f1),corStruct="full",family="gaussian",data=d)
+     VarCorr(g4)
+ 
+     g5 <- glmmadmb(y~1+(x+x2|f1),corStruct="full",family="gaussian",data=d)
+     VarCorr(g5)
+ }
> 
> ## m5 <- lme(y~1,random=~x+x2|f1,data=d)
> ## needs work.
> 
> ## is doing it 'wrong' (explicit nesting) slower?
> ## library(rbenchmark)
> ## benchmark(glmmadmb(y~1+(1|f1/f2),family="gaussian",data=d),
> ##           glmmadmb(y~1+(1|f1/f12),family="gaussian",data=d),
> ##          replications=20)
> 
> ## only a little bit, at least for this example:
>  
> ##         n   elapsed relative user.self sys.self user.child sys.child
> ##  f1/f12 20  39.901 1.166935     0.572    2.344     30.154     6.317
> ##  f1/f2  20  34.193 1.000000     0.432    2.200     26.337     4.848
> 
> ## }
> 
> proc.time()
   user  system elapsed 
  5.840   2.876   8.558 
