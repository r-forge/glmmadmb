
R Under development (unstable) (2013-04-25 r62670) -- "Unsuffered Consequences"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(glmmADMB)  ## testing version
Loading required package: MASS
Loading required package: R2admb

Attaching package: ‘glmmADMB’

The following object is masked from ‘package:MASS’:

    stepAIC

The following object is masked from ‘package:stats’:

    step

> library(lme4.0)
Loading required package: Matrix
Loading required package: lattice

Attaching package: ‘lme4.0’

The following object is masked from ‘package:glmmADMB’:

    VarCorr

The following object is masked from ‘package:stats’:

    AIC, BIC

> 
> load("multrand_batch.RData")
> 
> 
> ## kluge, for passing tests until I can get this sorted out
> setMethod("VarCorr", signature(x="glmmadmb"), glmmADMB:::VarCorr.glmmadmb)
[1] "VarCorr"
> setMethod("VarCorr", signature(x="summary.glmmadmb"), glmmADMB:::VarCorr.glmmadmb)
[1] "VarCorr"
> 
> sumfun <- function (x,times)
+   UseMethod("sumfun")
> 
> tmpnamefun <- function(nn) {
+   c(outer(c("min","mean","max"),nn,
+           function(x,y) paste(y,x,sep=".")))
+ }
> tmpsumfun <- function(x) c(min=min(x),mean=mean(x),max=max(x))
> 
> ## will not work for 'old' glmmADMB (wrong ranef structure)
> sumfun.glmmadmb <- function(x,times) {
+   fixed <- coef(x)
+   ransum <- unlist(lapply(ranef(x),
+                    function(z)
+                    apply(z,MARGIN=2,FUN=tmpsumfun)))
+   LL <- logLik(x)
+   rv <- unlist(lapply(VarCorr(x),diag))
+   times <- round(times[3],2)
+   mm <- c(fixed,c(rv),c(LL),ransum,times)
+   rnames <- names(rv)
+   names(mm) <- c(names(coef(x)),
+                  paste("var(RE)",rnames,sep="."),
+                  "logLik",
+                  paste("U",tmpnamefun(rnames),sep="."),
+                  "time")
+   mm
+ }
> 
> sumfun.mer <- sumfun.merMod <- function(x,times) {
+     ## should work for old/new lme4 ...
+   fixed <- fixef(x)
+   ransum <- unlist(lapply(ranef(x),
+                           function(z)
+                           apply(z,MARGIN=2,FUN=tmpsumfun)))
+   LL <- logLik(x)
+   rv <- sapply(VarCorr(x),c)
+   times <- round(times[3],2)
+   mm <- c(fixed,c(rv),c(LL),ransum,times)
+   rnames <- names(rv)
+   names(mm) <- c(names(fixef(x)),
+                  paste("var(RE)",rnames,sep="."),
+                  "logLik",
+                  paste("U",tmpnamefun(rnames),sep="."),
+                  "time")
+   mm
+ }
> 
> sumfun2A <- function(modlist,tlist) {
+   mapply(sumfun,modlist,tlist)
+ }
> 
> ## does this work for multiple grouping variables?
> sumfun(g2_GA,t2_GA)
          (Intercept)                     x var(RE).f.(Intercept) 
         8.472400e-01          1.999200e+00          1.071400e+00 
var(RE).g.(Intercept)                logLik   U.f.(Intercept).min 
         3.541600e+00         -2.611580e+04         -1.559872e+00 
 U.f.(Intercept).mean   U.f.(Intercept).max   U.g.(Intercept).min 
         3.864316e-05          2.561213e+00         -2.494477e+00 
 U.g.(Intercept).mean   U.g.(Intercept).max                  time 
         1.656084e-04          3.209604e+00          1.020100e+03 
> sumfun(g2_lme4,t2_lme4)
  (Intercept)             x     var(RE).f     var(RE).g        logLik 
 8.472194e-01  1.999173e+00  1.071428e+00  3.518891e+00 -5.876052e+03 
      U.f.min      U.f.mean       U.f.max       U.g.min      U.g.mean 
-1.559908e+00  5.009047e-05  2.561272e+00 -2.494464e+00  1.645121e-04 
      U.g.max          time 
 3.209540e+00  6.510000e+00 
> 
> sumfun2A(list(GA=g1_GA,lme4=g1_lme4),
+         list(t1_GA,t1_lme4))
                                 GA          lme4
(Intercept)           -5.221100e-02 -5.220949e-02
x                      1.887000e+00  1.886994e+00
var(RE).f.(Intercept)  7.461100e-02  7.461046e-02
var(RE).g.(Intercept)  4.849500e-01  4.818427e-01
logLik                -2.278820e+03 -7.021216e+02
U.f.(Intercept).min   -3.978705e-01 -3.978543e-01
U.f.(Intercept).mean   1.709374e-04  1.763563e-04
U.f.(Intercept).max    3.785861e-01  3.785854e-01
U.g.(Intercept).min   -9.949928e-01 -9.949182e-01
U.g.(Intercept).mean   1.108921e-03  1.138929e-03
U.g.(Intercept).max    1.128072e+00  1.128113e+00
time                   2.504000e+01  5.700000e-01
> 
> sumfun2A(list(GA=g2_GA,lme4=g2_lme4),
+         list(t2_GA,t2_lme4))
                                 GA          lme4
(Intercept)            8.472400e-01  8.472194e-01
x                      1.999200e+00  1.999173e+00
var(RE).f.(Intercept)  1.071400e+00  1.071428e+00
var(RE).g.(Intercept)  3.541600e+00  3.518891e+00
logLik                -2.611580e+04 -5.876052e+03
U.f.(Intercept).min   -1.559872e+00 -1.559908e+00
U.f.(Intercept).mean   3.864316e-05  5.009047e-05
U.f.(Intercept).max    2.561213e+00  2.561272e+00
U.g.(Intercept).min   -2.494477e+00 -2.494464e+00
U.g.(Intercept).mean   1.656084e-04  1.645121e-04
U.g.(Intercept).max    3.209604e+00  3.209540e+00
time                   1.020100e+03  6.510000e+00
> 
> 
> proc.time()
   user  system elapsed 
  5.912   3.196   8.991 
